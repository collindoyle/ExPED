/* xmltakshitrim.c
 * written by CHU Yimin
 * Preprocessing the xml data from Prof. Takasu.
 * Goal:
 * 1. Trim the <block> and </block> 
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <memory.h>

int filtblocktag(FILE *destination, FILE *source);

char * generatefilename (char * sourcefilename);

int main ( int argc, char *argv[]) {
	char * newfilename = NULL;
	FILE *sourcefp = NULL;
	FILE *destfp = NULL;
	int charcount = 0;
	if ( argc < 2) {
		printf ("Please specify the name of the source file.\n");
		return 0;
	}
	newfilename = generatefilename(argv[1]);
	if (newfilename != NULL)
	{
		destfp = fopen(newfilename, "w+");
	}
	else {
		printf ("Fail to open the destination file. \n");
		return 0;
	}
	sourcefp = fopen(argv[1],"r+");
	if ( sourcefp != NULL && destfp != NULL) {
		charcount = filtblocktag(destfp,sourcefp);
		fclose(destfp);
		fclose(sourcefp);
		if (newfilename != NULL) {
			free(newfilename);
		}
		newfilename = NULL;
		return charcount;
	}

	else {
		printf ("Fail to open the file. \n");
		return 0;
	}
}

int filtblocktag(FILE *destination, FILE * source) {
	char curchar;
	char charbuf[256];
	int buflocation = 0;
	curchar = fgetc(source);
	while (curchar != EOF) {
		fputc(curchar, destination);
		switch (curchar) {
		case '<':
			break;
		case '/':
			break;
		case '>':
			break;
		default:
			switch (curchar) {
			}
			break;
		}
		curchar = fgetc(source);
	}
	







